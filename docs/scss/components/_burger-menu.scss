.burger-menu {
    $color-primary: map-get($BURGER, color_primary);
    $color-active: map-get($BURGER, color_active);
    $originTop: map-get($BURGER, origin_top);
    $originBottom: map-get($BURGER, origin_bottom);
    $speed: map-get($BURGER, animation_speed);
    
    display: block;
    position: relative;
    @include rem((width:48px,
            height:48px));
    background-color: transparent;
    cursor: pointer;

    &::before,
    &::after,
    span {
        position: absolute;
        height: 4px;
        background-color: $color-primary;
        border-radius: 4px;
        width: 100%;
    }

    &::before {
        content: "";
        top: $originTop;
        left: 0;
    }

    span {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &::after {
        content: "";
        bottom: $originBottom;
        right: 0;
    }

    &.active {
        @mixin combo-animation($side) {
                @if $side !=middle {
                    $animation-move: burger-active-move-#{$side};
                    $animation-rotate: burger-active-rotate-#{$side};
                    $animation-color: burger-active-color-#{$side};

                    @keyframes #{$animation-move} {
                        100% {
                            #{$side}: 50%;

                            @if $side ==top {
                                transform: translate(0, -50%);
                            }

                            @else if $side ==bottom {
                                transform: translate(0, 50%);
                            }

                        }
                    }

                    @keyframes #{$animation-rotate} {
                        0% {
                            @if $side ==top {
                                transform: translate(0, -50%) rotate(-180deg);
                            }

                            @else if $side ==bottom {
                                transform: translate(0, 50%) rotate(-180deg);
                            }
                        }

                        100% {
                            @if $side ==top {
                                transform: translate(0, -50%) rotate(45deg);
                            }

                            @else if $side ==bottom {
                                transform: translate(0, 50%) rotate(-45deg);
                            }
                        }
                    }

                    @keyframes #{$animation-color} {
                        100% {
                            background-color: $color-active;
                        }
                    }

                    animation: #{$animation-move} $speed ease-in-out forwards,
                    #{$animation-color} $speed ease-in-out calc($speed - .2s) forwards,
                    #{$animation-rotate} $speed ease-in-out calc($speed * 2) forwards;
                }

                @else {
                    $animation-opacity: burger-active-opacity-#{$side};
                    $animation-color: burger-active-color-#{$side};

                    @keyframes #{$animation-opacity} {
                        100% {
                            opacity: 0;
                        }
                    }

                    @keyframes #{$animation-color} {
                        100% {
                            background-color: $color-active;
                        }
                    }

                    animation: #{$animation-color} $speed ease-in-out calc($speed - .2s) forwards,
                    #{$animation-opacity} $speed ease-in-out $speed forwards;
                }


            }

            &::before {
                @include combo-animation(top);
            }

            span {
                @include combo-animation(middle);
            }

            &::after {
                @include combo-animation(bottom);
            }
    }

    &.reverse {
        @mixin combo-animation($side) {
                @if $side !=middle {
                    $animation-move: burger-reverse-move-#{$side};
                    $animation-rotate: burger-reverse-rotate-#{$side};
                    $animation-color: burger-reverse-color-#{$side};


                    @keyframes #{$animation-rotate} {
                        100% {
                            #{$side}: 50%;

                            @if $side ==top {
                                transform: translate(0, -50%) rotate(-180deg);
                            }

                            @else if $side ==bottom {
                                transform: translate(0, 50%) rotate(-180deg);
                            }

                        }
                    }

                    @keyframes #{$animation-move} {
                        100% {
                            @if $side ==top {
                                #{$side}: $originTop;
                            }

                            @else if $side ==bottom {
                                #{$side}: $originBottom;
                            }

                            transform: translate(0, 0) rotate(-180deg);
                        }
                    }

                    @keyframes #{$animation-color} {
                        0% {
                            background-color: $color-active;
                        }

                        50% {
                            background-color: $color-active;
                        }

                        100% {
                            background-color: $color-primary;
                        }
                    }

                    animation: $animation-rotate $speed ease-in-out forwards,
                    $animation-color calc($speed * 2) ease-in-out forwards,
                    $animation-move $speed ease-in-out calc($speed * 2) forwards;
                }

                @else {
                    $animation-opacity: burger-reverse-opacity-#{$side};
                    $animation-color: burger-reverse-color-#{$side};

                    @keyframes #{$animation-opacity} {
                        0% {
                            opacity: 0;
                        }

                        100% {
                            opacity: 1;
                        }
                    }

                    @keyframes #{$animation-color} {
                        0% {
                            background-color: $color-active;
                        }

                        100% {
                            background-color: $color-primary;
                        }
                    }

                    animation: $animation-opacity calc($speed * 4) ease-in-out forwards,
                    $animation-color calc($speed * 2) ease-in-out $speed forwards;

                }
            }

            &::before {
                @include combo-animation(top);
            }

            span {
                @include combo-animation(middle);
            }

            &::after {
                @include combo-animation(bottom);
            }
    }
}